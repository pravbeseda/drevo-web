#!/usr/bin/env bash

# Pre-commit hook to check for secrets using gitleaks
# This script runs before each commit to prevent committing sensitive data

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${YELLOW}üîç Checking for secrets with gitleaks...${NC}"

# Check if gitleaks is installed
if ! command -v gitleaks &> /dev/null; then
    echo -e "${RED}‚ùå Gitleaks is not installed!${NC}"
    echo -e "${YELLOW}üì¶ Installing gitleaks...${NC}"
    
    # Detect OS and install gitleaks
    if [[ "$OSTYPE" == "darwin"* ]]; then
        # macOS
        if command -v brew &> /dev/null; then
            brew install gitleaks
        else
            echo -e "${RED}Please install Homebrew first: https://brew.sh${NC}"
            exit 1
        fi
    elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
        # Linux
        echo -e "${YELLOW}Please install gitleaks manually:${NC}"
        echo "curl -sSfL https://github.com/gitleaks/gitleaks/releases/download/v8.18.0/gitleaks_8.18.0_linux_x64.tar.gz | tar -xz -C /usr/local/bin gitleaks"
        exit 1
    else
        echo -e "${RED}Unsupported OS. Please install gitleaks manually: https://github.com/gitleaks/gitleaks${NC}"
        exit 1
    fi
fi

# Run gitleaks on staged files
if gitleaks protect --staged --redact --verbose; then
    echo -e "${GREEN}‚úÖ No secrets detected!${NC}"
    exit 0
else
    echo -e "${RED}‚ùå Secrets detected! Commit aborted.${NC}"
    echo -e "${YELLOW}üí° If this is a false positive, you can:${NC}"
    echo -e "   1. Update .gitleaks.toml to allowlist the pattern"
    echo -e "   2. Use 'git commit --no-verify' to bypass this check (NOT RECOMMENDED)"
    exit 1
fi
