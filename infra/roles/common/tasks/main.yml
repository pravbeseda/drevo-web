---
# infra/roles/common/tasks/main.yml

- name: Update apt cache
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600

- name: Upgrade all packages to the latest version
  ansible.builtin.apt:
    upgrade: dist

- name: Install common packages
  ansible.builtin.apt:
    name: "{{ common_packages }}"
    state: present

- name: Ensure .ssh directory exists for root
  ansible.builtin.file:
    path: "/root/.ssh"
    state: directory
    owner: root
    group: root
    mode: "0700"

- name: Copy public key to authorized_keys for root
  ansible.builtin.copy:
    src: "~/.ssh/{{ ssh_key_name }}.pub"
    dest: "/root/.ssh/authorized_keys"
    owner: root
    group: root
    mode: "0600"

- name: Create backup of sshd_config if not exists
  ansible.builtin.copy:
    src: /etc/ssh/sshd_config
    dest: /etc/ssh/sshd_config.orig
    remote_src: yes
    force: no

- name: Configure SSH security settings
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
    backrefs: yes
  loop:
    - { regexp: '^#?PasswordAuthentication.*', line: 'PasswordAuthentication no' }
    - { regexp: '^#?PubkeyAuthentication.*', line: 'PubkeyAuthentication yes' }
    - { regexp: '^#?PermitRootLogin.*', line: 'PermitRootLogin prohibit-password' }
    - { regexp: '^#?X11Forwarding.*', line: 'X11Forwarding no' }
    - { regexp: '^#?PrintMotd.*', line: 'PrintMotd no' }
    - { regexp: '^#?UsePAM.*', line: 'UsePAM no' }
    - { regexp: '^#?AuthenticationMethods.*', line: 'AuthenticationMethods publickey' }
    - { regexp: '^#?KbdInteractiveAuthentication.*', line: 'KbdInteractiveAuthentication no' }
    - { regexp: '^#?ChallengeResponseAuthentication.*', line: 'ChallengeResponseAuthentication no' }
  register: ssh_config

- name: Extract current SSH port
  ansible.builtin.shell: grep -E '^Port ' /etc/ssh/sshd_config | awk '{print $2}' || echo "22"
  register: current_ssh_port
  changed_when: false

- name: Configure SSH port
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^#?Port '
    line: 'Port {{ ssh_port }}'
    state: present
  register: ssh_config_updated
  when: current_ssh_port.stdout != ssh_port | string

- name: Check if UFW is installed
  ansible.builtin.shell: command -v ufw || echo "not_installed"
  register: ufw_check
  changed_when: false

- name: Reset UFW rules if SSH port changed and UFW is installed
  ansible.builtin.shell: ufw --force reset
  when:
    - ssh_config_updated is changed
    - ufw_check.stdout != "not_installed"

- name: Test SSH configuration
  ansible.builtin.command: sshd -t
  when: ssh_config is changed

- name: Restart SSH service
  ansible.builtin.service:
    name: ssh
    state: restarted
  when: ssh_config is changed

- name: Wait for SSH to be available
  ansible.builtin.wait_for:
    host: "{{ ansible_host }}"
    port: "{{ ssh_port }}"
    timeout: 30
    state: started

- name: Verify SSH connection on new port
  ansible.builtin.wait_for:
    host: "{{ ansible_host }}"
    port: "{{ ssh_port }}"
    timeout: 10
    state: started
    search_regex: OpenSSH

- name: Update connection_port in production.cfg
  ansible.builtin.shell: |
    sed -i '' "s/^connection_port:.*/connection_port: {{ ssh_port }}/" "{{ playbook_dir }}/inventory/production.cfg"
  delegate_to: localhost
  become: false

- name: Import SSH agent configuration tasks
  import_tasks: ssh_agent.yml
  tags: ['ssh', 'security']
