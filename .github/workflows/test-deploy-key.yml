name: Test SSH Deployment

on:
  workflow_dispatch: # –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Ä—É—á–Ω—É—é

jobs:
  test-ssh-deployment:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup SSH for deployment
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}

      - name: Debug SSH configuration
        run: |
          echo "üîç Debugging SSH configuration..."
          echo "SSH_USER: ${{ secrets.SSH_USER }}"
          echo "SSH_HOST: ${{ secrets.SSH_HOST }}"
          echo "SSH_PORT: ${{ secrets.SSH_PORT || '22' }}"
          echo "SSH_PRIVATE_KEY exists: ${{ secrets.SSH_PRIVATE_KEY != '' }}"
          echo "SSH_KNOWN_HOSTS exists: ${{ secrets.SSH_KNOWN_HOSTS != '' }}"

      - name: Test SSH connection to server
        run: |
          echo "üß™ Testing SSH connection..."
          echo "Connecting to ${{ secrets.SSH_HOST }} on port ${{ secrets.SSH_PORT || '22' }}..."
          ssh -p ${{ secrets.SSH_PORT || '22' }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "echo 'SSH connection successful'"

      - name: Test file deployment to staging
        run: |
          echo "üß™ Testing file deployment to staging..."
          
          # Create simple test file
          echo "<h1>SSH Test $(date)</h1>" > test-deploy.html
          
          # Deploy test file to staging
          rsync -avz -e "ssh -p ${{ secrets.SSH_PORT || '22' }}" test-deploy.html ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:staging/
          
          # Verify deployment
          ssh -p ${{ secrets.SSH_PORT || '22' }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cat staging/test-deploy.html"
          
          # Cleanup
          ssh -p ${{ secrets.SSH_PORT || '22' }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "rm staging/test-deploy.html"
          rm test-deploy.html
          
          echo "‚úÖ SSH deployment test successful"