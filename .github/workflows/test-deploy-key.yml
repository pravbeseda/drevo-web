name: Test SSH Deployment

on:
  workflow_dispatch: # –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Ä—É—á–Ω—É—é

jobs:
  test-ssh-deployment:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies and build
        run: |
          echo "üß™ Testing build process..."
          yarn install --frozen-lockfile
          npx nx build client --configuration=production
          echo "‚úÖ Build successful"

      - name: Setup SSH for deployment
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}

      - name: Test SSH connection to server
        run: |
          echo "üß™ Testing SSH connection..."
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "echo 'SSH connection successful'"

      - name: Test deployment to staging
        run: |
          echo "üß™ Testing deployment to staging..."
          # Create test file
          echo "<h1>Test Deployment $(date)</h1>" > dist/apps/client/test-deploy.html
          
          # Deploy to staging
          rsync -avz --delete dist/apps/client/ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:staging
          
          # Verify deployment
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cat staging/test-deploy.html"
          
          # Cleanup
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "rm staging/test-deploy.html"
          
          echo "‚úÖ SSH deployment test successful"